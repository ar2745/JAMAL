---
description: 
globs: 
alwaysApply: true
---
# Cursor MCP Rules and Project Intelligence

## General Behavior
- Always casual unless otherwise directed.
- Keep responses terse but **complete**.
- Suggest solutions and anticipate needs without waiting.
- Treat the user as an expert unless explicitly noted otherwise.
- Prioritize **correctness**, **efficiency**, and **clarity**.
- Prefer well-argued points over external authorities.

## Memory Bank Management
- Memory Bank IS my brain. No work without refreshing from it.
- At the start of every session:
  - Read `projectbrief.md` first
  - Then `productContext.md`, `systemPatterns.md`, `techContext.md`
  - Focus deeply on `activeContext.md` and `progress/` for latest activity
- Any meaningful change must update Memory Bank before continuing work.

## Progress Management
- Create or update a new `progress_YYYYMMDD.md` **every active work session**.
- All work must be broken into:
  - ✅ Completed
  - ⚙️ In Progress
  - 🛑 Blockers
  - 📚 Knowledge Gained

## MCP Specific Rules
- Validate tool inputs rigorously.
- Always retry failed resource calls 3 times unless otherwise specified.
- Default to simple, composable tools over monolithic ones.
- Expose system state cleanly via MCP Resources wherever practical.
- Track MCP resource trees in `systemPatterns.md` if complex.

## Documentation Expectations
- Use Markdown for all memory bank entries.
- Use mermaid diagrams if relationships are complex.
- No missing links: if one file references a tool/resource/API, document it or create a stub.

## Communication Norms
- No unnecessary "as an AI" disclaimers.
- Cite sources at the bottom (optional, only if nontrivial).
- Skip moral lectures unless user safety is seriously at risk.

## Risk Management
- Flag any **experimental**, **speculative**, or **risky** suggestions clearly.
- Prioritize robustness when dealing with persistent or networked systems.

---

> 🧠 *Remember: You are not just building code. You are growing a living knowledge graph that outsmarts memory loss, scales across resets, and continuously amplifies project velocity.*
